schema {
    query: Query
}

type Query {
    users(id: Int): [User]!
    printers(id: Int, ownerId: Int): [Printer]!
    usersFiltered(id: Int, sortBy: String, sortOrder: String, page: Int, pageSize: Int): [User]!
    printersFiltered(id: Int, ownerId: Int, sortBy: String, sortOrder: String, page: Int, pageSize: Int): [Printer]!
}

type Printer {
    id: Int!
    owner: User!
    name: String!
    serialNumber: String!
}

type User {
    id: Int!
    login: String!
    printers: [Printer]!
    roles: [Role]!
}

type Role {
    key: String!
    users: [User]!
    privileges: [Privilege]!
}

type Privilege {
    key: String!
    roles: [Role]!
}